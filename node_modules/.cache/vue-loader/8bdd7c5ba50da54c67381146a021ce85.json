{"remainingRequest":"/Users/polinasetinina/Desktop/web_progr/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/polinasetinina/Desktop/web_progr/src/views/News.vue?vue&type=template&id=1aa8c6e6&","dependencies":[{"path":"/Users/polinasetinina/Desktop/web_progr/src/views/News.vue","mtime":1606662118537},{"path":"/Users/polinasetinina/Desktop/web_progr/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/polinasetinina/Desktop/web_progr/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/polinasetinina/Desktop/web_progr/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/polinasetinina/Desktop/web_progr/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9ImludHJvIj4KICA8bWFpbiBjbGFzcz0ibWFpbiBjb2x1bW5zIj4KICAgIDxzZWN0aW9uIGNsYXNzPSJjb2x1bW4gbWFpbi1jb2x1bW4iPgogICAgICA8YSBjbGFzcz0iYXJ0aWNsZSBmaXJzdC1hcnRpY2xlIj4KICAgICAgICA8cm91dGVyLWxpbmsgdG89Ii9uZXcxIj4KICAgICAgICA8ZmlndXJlIGNsYXNzPSJhcnRpY2xlLWltYWdlIGlzLTRieTMiPgogICAgICAgICAgPGltZyBzcmM9Ii4uL2Fzc2V0cy9pbWFnZS9uZXcxLmpwZyIgYWx0PSIiPgogICAgICAgIDwvZmlndXJlPgogICAgICAgIDxkaXYgY2xhc3M9ImFydGljbGUtYm9keSI+CiAgICAgICAgICA8aDIgY2xhc3M9ImFydGljbGUtdGl0bGUiPgogICAgICAgICAgICDQktGL0YHRgtCw0LLQutCwIFJvbWEgQWV0ZXJuYS4KICAgICAgICAgIDwvaDI+CiAgICAgICAgICA8cCBjbGFzcz0iYXJ0aWNsZS1jb250ZW50Ij4KICAgICAgICAgICAg0JTQviAxOSDRhNC10LLRgNCw0LvRjyAyMDE3INCz0L7QtNCwINCyINCY0L3QttC10L3QtdGA0L3QvtC8INC60L7RgNC/0YPRgdC1INCT0L7RgdGD0LTQsNGA0YHRgtCy0LXQvdC90L7QuSDQotGA0LXRgtGM0Y/QutC+0LLRgdC60L7QuSDQs9Cw0LvQtdGA0LXQuCDQsiDQnNC+0YHQutCy0LUg0L/RgNC+0YXQvtC00LjRgiDQstGL0YHRgtCw0LLQutCwIMKrUm9tYSBBZXRlcm5hLiDQqNC10LTQtdCy0YDRiyDQn9C40L3QsNC60L7RgtC10LrQuCDQktCw0YLQuNC60LDQvdCwwrsuINCU0LjQt9Cw0LnQvSDRjdGC0L7QuSDRg9C90LjQutCw0LvRjNC90L7QuSDRjdC60YHQv9C+0LfQuNGG0LjQuCwg0LLQvtCx0YDQsNCy0YjQtdC5INCyINGB0LXQsdGPIDQyINGA0LDRgNC40YLQtdGC0LAg0LjQtyDRgdC+0LHRgNCw0L3QuNGPINC+0LTQvdC+0LPQviDQuNC3INGB0LDQvNGL0YUg0LjQt9Cy0LXRgdGC0L3Ri9GFINC80YPQt9C10LXQsiDQvNC40YDQsCwg0YDQsNC30YDQsNCx0L7RgtCw0LvQuCDQsNGA0YXQuNGC0LXQutGC0L7RgNGLINCh0LXRgNCz0LXQuSDQp9C+0LHQsNC9INC4INCQ0LPQvdC40Y8g0KHRgtC10YDQu9C40LPQvtCy0LAuCiAgICAgICAgICA8L3A+CiAgICAgICAgICA8Zm9vdGVyIGNsYXNzPSJhcnRpY2xlLWluZm8iPgogICAgICAgICAgICA8c3Bhbj5CeSBKb2UgU21pdGg8L3NwYW4+CiAgICAgICAgICA8L2Zvb3Rlcj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8L3JvdXRlci1saW5rPgogICAgICA8L2E+CgogICAgICA8ZGl2IGNsYXNzPSJjb2x1bW5zIj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4gbmVzdGVkLWNvbHVtbiI+CiAgICAgICAgICA8YSBjbGFzcz0iYXJ0aWNsZSIgaHJlZj0iIyI+CiAgICAgICAgICAgIDxmaWd1cmUgY2xhc3M9ImFydGljbGUtaW1hZ2UgaXMtMTZieTkiPgogICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3MuY2Rwbi5pby8yMTAyODQvaW1hZ2UtMDItbG8uanBnIiBhbHQ9IiI+CiAgICAgICAgICAgIDwvZmlndXJlPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnRpY2xlLWJvZHkiPgogICAgICAgICAgICAgIDxoMiBjbGFzcz0iYXJ0aWNsZS10aXRsZSI+CiAgICAgICAgICAgICAgICBIZWxsbyBXb3JsZAogICAgICAgICAgICAgIDwvaDI+CiAgICAgICAgICAgICAgPHAgY2xhc3M9ImFydGljbGUtY29udGVudCI+CiAgICAgICAgICAgICAgICBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LiBQcm9pbiBvcm5hcmUgbWFnbmEgZXJvcywgZXUgcGVsbGVudGVzcXVlIHRvcnRvciB2ZXN0aWJ1bHVtIHV0LiBNYWVjZW5hcyBub24gbWFzc2Egc2VtLiBFdGlhbSBmaW5pYnVzIG9kaW8gcXVpcyBmZXVnaWF0IGZhY2lsaXNpcy4KICAgICAgICAgICAgICAgIExvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQuIFByb2luIG9ybmFyZSBtYWduYSBlcm9zLCBldSBwZWxsZW50ZXNxdWUgdG9ydG9yIHZlc3RpYnVsdW0gdXQuIE1hZWNlbmFzIG5vbiBtYXNzYSBzZW0uIEV0aWFtIGZpbmlidXMgb2RpbyBxdWlzIGZldWdpYXQgZmFjaWxpc2lzLgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICA8Zm9vdGVyIGNsYXNzPSJhcnRpY2xlLWluZm8iPgogICAgICAgICAgICAgICAgPHNwYW4+QnkgSm9lIFNtaXRoPC9zcGFuPgogICAgICAgICAgICAgICAgPHNwYW4+NDIgY29tbWVudHM8L3NwYW4+CiAgICAgICAgICAgICAgPC9mb290ZXI+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iPgogICAgICAgICAgPGEgY2xhc3M9ImFydGljbGUiIGhyZWY9IiMiPgogICAgICAgICAgICA8ZmlndXJlIGNsYXNzPSJhcnRpY2xlLWltYWdlIGlzLTE2Ynk5Ij4KICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjEwMjg0L2ltYWdlLTAzLWxvLmpwZyIgYWx0PSIiPgogICAgICAgICAgICA8L2ZpZ3VyZT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJ0aWNsZS1ib2R5Ij4KICAgICAgICAgICAgICA8aDIgY2xhc3M9ImFydGljbGUtdGl0bGUiPgogICAgICAgICAgICAgICAgSGVsbG8gV29ybGQKICAgICAgICAgICAgICA8L2gyPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJhcnRpY2xlLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgPGZvb3RlciBjbGFzcz0iYXJ0aWNsZS1pbmZvIj4KICAgICAgICAgICAgICAgIDxzcGFuPkJ5IEpvZSBTbWl0aDwvc3Bhbj4KICAgICAgICAgICAgICAgIDxzcGFuPjQyIGNvbW1lbnRzPC9zcGFuPgogICAgICAgICAgICAgIDwvZm9vdGVyPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYT4KICAgICAgICAgIDxhIGNsYXNzPSJhcnRpY2xlIiBocmVmPSIjIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJ0aWNsZS1ib2R5Ij4KICAgICAgICAgICAgICA8aDIgY2xhc3M9ImFydGljbGUtdGl0bGUiPgogICAgICAgICAgICAgICAgSGVsbG8gV29ybGQKICAgICAgICAgICAgICA8L2gyPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJhcnRpY2xlLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQuCiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgIDxmb290ZXIgY2xhc3M9ImFydGljbGUtaW5mbyI+CiAgICAgICAgICAgICAgICA8c3Bhbj5CeSBKb2UgU21pdGg8L3NwYW4+CiAgICAgICAgICAgICAgICA8c3Bhbj4yMiBjb21tZW50czwvc3Bhbj4KICAgICAgICAgICAgICA8L2Zvb3Rlcj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2E+CiAgICAgICAgICA8YSBjbGFzcz0iYXJ0aWNsZSIgaHJlZj0iIyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFydGljbGUtYm9keSI+CiAgICAgICAgICAgICAgPGgyIGNsYXNzPSJhcnRpY2xlLXRpdGxlIj4KICAgICAgICAgICAgICAgIEhlbGxvIFdvcmxkCiAgICAgICAgICAgICAgPC9oMj4KICAgICAgICAgICAgICA8cCBjbGFzcz0iYXJ0aWNsZS1jb250ZW50Ij4KICAgICAgICAgICAgICAgIExvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0IGZldWdpYXQgZmFjaWxpc2lzLgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICA8Zm9vdGVyIGNsYXNzPSJhcnRpY2xlLWluZm8iPgogICAgICAgICAgICAgICAgPHNwYW4+QnkgSm9lIFNtaXRoPC9zcGFuPgogICAgICAgICAgICAgICAgPHNwYW4+NDIgY29tbWVudHM8L3NwYW4+CiAgICAgICAgICAgICAgPC9mb290ZXI+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvc2VjdGlvbj4KCiAgICA8c2VjdGlvbiBjbGFzcz0iY29sdW1uIj4KICAgICAgPGEgY2xhc3M9ImFydGljbGUiIGhyZWY9IiMiPgogICAgICAgIDxmaWd1cmUgY2xhc3M9ImFydGljbGUtaW1hZ2UgaXMtM2J5MiI+CiAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjEwMjg0L2ltYWdlLTA0LWxvLmpwZyIgYWx0PSIiPgogICAgICAgIDwvZmlndXJlPgogICAgICAgIDxkaXYgY2xhc3M9ImFydGljbGUtYm9keSI+CiAgICAgICAgICA8aDIgY2xhc3M9ImFydGljbGUtdGl0bGUiPgogICAgICAgICAgICBIZWxsbyBXb3JsZAogICAgICAgICAgPC9oMj4KICAgICAgICAgIDxwIGNsYXNzPSJhcnRpY2xlLWNvbnRlbnQiPgogICAgICAgICAgICBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LgogICAgICAgICAgICBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LgogICAgICAgICAgICBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LgogICAgICAgICAgPC9wPgogICAgICAgICAgPGZvb3RlciBjbGFzcz0iYXJ0aWNsZS1pbmZvIj4KICAgICAgICAgICAgPHNwYW4+QnkgSm9lIFNtaXRoPC9zcGFuPgogICAgICAgICAgICA8c3Bhbj40MiBjb21tZW50czwvc3Bhbj4KICAgICAgICAgIDwvZm9vdGVyPgogICAgICAgIDwvZGl2PgogICAgICA8L2E+CiAgICAgIDxhIGNsYXNzPSJhcnRpY2xlIiBocmVmPSIjIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnRpY2xlLWJvZHkiPgogICAgICAgICAgPGgyIGNsYXNzPSJhcnRpY2xlLXRpdGxlIj4KICAgICAgICAgICAgSGVsbG8gV29ybGQKICAgICAgICAgIDwvaDI+CiAgICAgICAgICA8cCBjbGFzcz0iYXJ0aWNsZS1jb250ZW50Ij4KICAgICAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4KICAgICAgICAgIDwvcD4KICAgICAgICAgIDxmb290ZXIgY2xhc3M9ImFydGljbGUtaW5mbyI+CiAgICAgICAgICAgIDxzcGFuPkJ5IEpvZSBTbWl0aDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4+NDIgY29tbWVudHM8L3NwYW4+CiAgICAgICAgICA8L2Zvb3Rlcj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9hPgogICAgICA8YSBjbGFzcz0iYXJ0aWNsZSIgaHJlZj0iIyI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJ0aWNsZS1ib2R5Ij4KICAgICAgICAgIDxoMiBjbGFzcz0iYXJ0aWNsZS10aXRsZSI+CiAgICAgICAgICAgIEhlbGxvIFdvcmxkCiAgICAgICAgICA8L2gyPgogICAgICAgICAgPHAgY2xhc3M9ImFydGljbGUtY29udGVudCI+CiAgICAgICAgICAgIExvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQuCiAgICAgICAgICA8L3A+CiAgICAgICAgICA8Zm9vdGVyIGNsYXNzPSJhcnRpY2xlLWluZm8iPgogICAgICAgICAgICA8c3Bhbj5CeSBKb2UgU21pdGg8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuPjQyIGNvbW1lbnRzPC9zcGFuPgogICAgICAgICAgPC9mb290ZXI+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvYT4KICAgICAgPGEgY2xhc3M9ImFydGljbGUiIGhyZWY9IiMiPgogICAgICAgIDxkaXYgY2xhc3M9ImFydGljbGUtYm9keSI+CiAgICAgICAgICA8aDIgY2xhc3M9ImFydGljbGUtdGl0bGUiPgogICAgICAgICAgICBIZWxsbyBXb3JsZAogICAgICAgICAgPC9oMj4KICAgICAgICAgIDxwIGNsYXNzPSJhcnRpY2xlLWNvbnRlbnQiPgogICAgICAgICAgICBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LgogICAgICAgICAgPC9wPgogICAgICAgICAgPGZvb3RlciBjbGFzcz0iYXJ0aWNsZS1pbmZvIj4KICAgICAgICAgICAgPHNwYW4+QnkgSm9lIFNtaXRoPC9zcGFuPgogICAgICAgICAgICA8c3Bhbj40MiBjb21tZW50czwvc3Bhbj4KICAgICAgICAgIDwvZm9vdGVyPgogICAgICAgIDwvZGl2PgogICAgICA8L2E+CiAgICA8L3NlY3Rpb24+CiAgPC9tYWluPgo8L2Rpdj4K"},null]}